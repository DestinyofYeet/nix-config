# Auto-generated using compose2nix v0.2.3.
{ pkgs, lib, ... }:

{
  # Runtime
  virtualisation.podman = {
    enable = true;
    autoPrune.enable = true;
    dockerCompat = true;
    defaultNetwork.settings = {
      # Required for container networking to be able to use names.
      dns_enabled = true;
    };
  };
  virtualisation.oci-containers.backend = "podman";

  # Containers
  virtualisation.oci-containers.containers."strichliste" = {
    image = "fsim/docker-strichliste:latest";
    environment = {
      "APP_ENV" = "prod";
      "DATABASE_URL" = "mysql://strichliste:{user_pwd}@strichliste-db/strichliste";
      "DB_HOST" = "strichliste-db";
      "MARIADB_AUTO_UPGRADE" = "true";
      "MYSQL_DATABASE" = "strichliste";
      "MYSQL_PASSWORD" = "{user_pwd}";
      "MYSQL_ROOT_PASSWORD" = "{root_pwd}";
      "MYSQL_USER" = "strichliste";
    };
    volumes = [
      "/home/ole/github/strichliste-docker/config/doctrine.yaml:/source/config/packages/doctrine.yaml:rw"
      "/home/ole/github/strichliste-docker/config/services.yaml:/source/config/services.yaml:rw"
      "/home/ole/github/strichliste-docker/config/strichliste.yaml:/source/config/strichliste.yaml:rw"
    ];
    ports = [
      "8080:8080/tcp"
    ];
    log-driver = "journald";
    extraOptions = [
      "--network-alias=strichliste"
      "--network=strichliste_default"
    ];
  };
  systemd.services."podman-strichliste" = {
    serviceConfig = {
      Restart = lib.mkOverride 500 "no";
    };
    after = [
      "podman-network-strichliste_default.service"
    ];
    requires = [
      "podman-network-strichliste_default.service"
    ];
    partOf = [
      "podman-compose-strichliste-root.target"
    ];
    wantedBy = [
      "podman-compose-strichliste-root.target"
    ];
  };
  virtualisation.oci-containers.containers."strichliste-db" = {
    image = "mariadb:10.11.5";
    environment = {
      "DATABASE_URL" = "mysql://strichliste:{user_pwd}@strichliste-db/strichliste";
      "DB_HOST" = "strichliste-db";
      "MARIADB_AUTO_UPGRADE" = "true";
      "MYSQL_DATABASE" = "strichliste";
      "MYSQL_PASSWORD" = "{user_pwd}";
      "MYSQL_ROOT_PASSWORD" = "{root_pwd}";
      "MYSQL_USER" = "strichliste";
    };
    volumes = [
      "/home/ole/github/strichliste-docker/data/mysql:/var/lib/mysql:rw"
    ];
    log-driver = "journald";
    extraOptions = [
      "--network-alias=strichliste-db"
      "--network=strichliste_default"
    ];
  };
  systemd.services."podman-strichliste-db" = {
    serviceConfig = {
      Restart = lib.mkOverride 500 "always";
    };
    after = [
      "podman-network-strichliste_default.service"
    ];
    requires = [
      "podman-network-strichliste_default.service"
    ];
    partOf = [
      "podman-compose-strichliste-root.target"
    ];
    wantedBy = [
      "podman-compose-strichliste-root.target"
    ];
  };

  # Networks
  systemd.services."podman-network-strichliste_default" = {
    path = [ pkgs.podman ];
    serviceConfig = {
      Type = "oneshot";
      RemainAfterExit = true;
      ExecStop = "podman network rm -f strichliste_default";
    };
    script = ''
      podman network inspect strichliste_default || podman network create strichliste_default
    '';
    partOf = [ "podman-compose-strichliste-root.target" ];
    wantedBy = [ "podman-compose-strichliste-root.target" ];
  };

  # Root service
  # When started, this will automatically create all resources and start
  # the containers. When stopped, this will teardown all resources.
  systemd.targets."podman-compose-strichliste-root" = {
    unitConfig = {
      Description = "Root target generated by compose2nix.";
    };
    wantedBy = [ "multi-user.target" ];
  };
}
